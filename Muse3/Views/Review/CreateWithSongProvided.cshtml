@model DataObjects.Review

@{
    ViewBag.Title = "CreateWithSongProvided";
    ViewBag.Title = "Review";   
}

<div class="mx-5 my-4 d-flex justify-content-center">
    <div class="d-flex justify-content-between">
        <div>
            <div>
                <img id="album-img-edit" style="width: 30rem; height: 30rem;" src="@Url.Action("GetSongPhoto", "Helper", new { songID = Model.ReviewedSong.SongID })" alt="Art for @Model.ReviewedSong.Title by @Model.ReviewedSong.Artist." />
            </div>
            <div class="mt-3">
                <button class="btn-add" onclick="window.location.href='@Url.Action("Library", "Song")'">
                    Back to Library
                </button>
            </div>
        </div>
        <div class="fs-3 px-5 mt-4">
            <p>
                @Model.ReviewedSong.Title
                @if (Model.ReviewedSong.Explicit == true)
                {
                    <img class="explicit-white" src="~/Images/explicit.png" />
                }
            </p>
            @if (Model.ReviewedSong.Album.Length.Equals(0))
            {
                <p>Album: Unknown</p>
            }
            else
            {
                <p>
                    Album:
                    <a class="mt-4" href="@Url.Action("Details", "Album", new { albumTitle = Model.ReviewedSong.Album, artistID = Model.ReviewedSong.Artist})">
                        @Model.ReviewedSong.Album
                    </a>
                </p>
            }
            @if (Model.ReviewedSong.Artist.Length.Equals(0))
            {
                <p>Artist: Unknown</p>
            }
            else
            {
                <p>
                    Artist:
                    <a class="mt-4" href="@Url.Action("Details", "Artist", new { id = Model.ReviewedSong.Artist})">
                        @Model.ReviewedSong.Artist
                    </a>
                </p>
            }
            <p>Year Released: @Html.DisplayFor(model => model.ReviewedSong.YearReleased)</p>
            @if (Model.ReviewedSong.Genre.Length.Equals(0))
            {
                <p>Genre: None</p>
            }
            else
            {
                <p>Genre: @Html.DisplayFor(model => model.ReviewedSong.Genre)</p>
            }
            <p class="mt-2 fs-5">Added: @Model.ReviewedSong.DateAdded.Date.ToShortDateString()</p>
            <div class="text-nowrap mt-4">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            Rating:
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control", min = "0", max = "5" } })
                                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group mt-4">
                            Description:
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", placeholder = "Message" } })
                                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-add" />
                            </div>
                        </div>
                    </div>
                }
            </div>
            </div>
        <div>
            <textarea readonly="readonly" id="lyrics">@Model.ReviewedSong.Lyrics</textarea>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
