@model DataObjects.Album

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="d-flex">
        <div class="your-element" data-tilt>
            <div class="col-md-10">
                <img onclick="document.getElementById('file-input').click();"
                     id="album-img-edit"
                     src="/MuseConfig/AlbumArt/@Path.GetFileName(@Model.ImageFilePath)"
                     alt="Album art for @Model.Title by @Model.ArtistID"
                     style="cursor: pointer;" />
                <input type="file"
                       id="file-input"
                       name="imageFile"
                       class="form-control"
                       style="display: none;"
                       accept="image/png"
                       onchange="handleImageSelection(event)" />
                @Html.ValidationMessageFor(model => model.ImageFilePath, "", new { @class = "text-danger fs-5" })
            </div>
        </div>
        <div class="px-3">
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mt-3">
                @Html.LabelFor(model => model.ArtistID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ArtistID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArtistID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mt-3 text-nowrap">
                @Html.LabelFor(model => model.YearReleased, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.YearReleased, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.YearReleased, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group mt-3">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class ="form-group mt-5">
                <input type="submit" value="Save" class="btn bg-purple text-light w-75 fs-5" />
            </div>
        </div>
    </div>
}

<div class="mt-5">
    @Html.ActionLink("All Albums", "Albums")
</div>

<script>
    function openFileDialog() {
        document.getElementById('album-img-edit').click();
    }

    function handleImageSelection(event) {
        // 0 since we are grabbing only 1 file
        const imageFilePath = event.target.files[0];
        if (imageFilePath) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const albumImgEdit = document.getElementById('album-img-edit');
                albumImgEdit.src = e.target.result;
            };
            // changes file path to url to use as source
            reader.readAsDataURL(imageFilePath);
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
