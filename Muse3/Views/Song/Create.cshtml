@model DataObjects.Song

@{
    ViewBag.Title = "Create";
    ViewBag.Hero = "Add Song";
}

@using (Html.BeginForm(Html.BeginForm("Create", "Song", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
<div class="d-flex justify-content-center">
    <div class="fs-4 pt-3 px-4 text-nowrap">
        <img id="album-img-edit" style="border: none; width: 250px; height: 250px;" src="/MuseConfig/AlbumArt/defaultAlbumImage.png" />
        <div class="form-group mt-4">
            Album Art:
            <div class="col-md-10">
                <input type="file" name="imageFile" class="form-control" accept="image/png" onchange="albumImagePreview(event)" />
                @Html.ValidationMessageFor(model => model.ImageFilePath, "", new { @class = "text-danger fs-5" })
            </div>
        </div>

        <div class="form-group mt-3">
            MP3:
            <div class="col-md-10">
                <input type="file" name="mp3File" class="form-control" accept="audio/mpeg" />
                @Html.ValidationMessageFor(model => model.Mp3FilePath, "", new { @class = "text-danger fs-5" })
            </div>
        </div>
    </div>

    <div class="fs-4 text-nowrap">
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control fs-4 mt-4", placeholder = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger fs-5" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control fs-4 mt-4", placeholder = "Artist" } })
                @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger fs-5" })
            </div>
        </div>

        <div class="form-group fs-4 text-nowrap">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Album, new { htmlAttributes = new { @class = "form-control fs-4 mt-4", placeholder = "Album" } })
                @Html.ValidationMessageFor(model => model.Album, "", new { @class = "text-danger fs-5" })
            </div>
        </div>
        <div class="form-group pt-4">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="mt-3 btn-add" />
            </div>
        </div>
    </div>

    <div>
        <div class="form-group fs-4 text-nowrap">
            @Html.LabelFor(model => model.YearReleased, htmlAttributes: new { @class = "control-label mt-4 col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.YearReleased, new { htmlAttributes = new { @class = "form-control fs-4 mt-4", placeholder = "2024", max = DateTime.Now.Year } })
                @Html.ValidationMessageFor(model => model.YearReleased, "", new { @class = "text-danger fs-5" })
            </div>
        </div>

        <div class="form-group fs-4 text-nowrap pt-4">
            <div class="col-md-10 text-nowrap">
                <div class="checkbox" style="">
                    <p>Explicit @Html.EditorFor(model => model.Explicit)</p>
                    @Html.ValidationMessageFor(model => model.Explicit, "", new { @class = "text-danger fs-5" })
                </div>
            </div>
        </div>

        <div class="form-group fs-4 text-nowrap">
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control fs-4 mt-4", placeholder = "Genre" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger fs-5" })
            </div>
        </div>
    </div>

    <div class="form-group fs-3 text-nowrap">
        @Html.LabelFor(model => model.Lyrics, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 lyrics">
            @Html.TextAreaFor(model => model.Lyrics, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lyrics, "", new { @class = "text-danger", })
        </div>
    </div>
</div>
}

<button class="btn-add">
    @Html.ActionLink("Back to Library", "Library")
</button>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>
    function albumImagePreview(event) {
        var image = document.getElementById('album-img-edit');
        var file = event.target.files[0];
        var reader = new FileReader();

        reader.onload = function () {
            image.src = reader.result;
        };

        reader.readAsDataURL(file);
    }
</script>


