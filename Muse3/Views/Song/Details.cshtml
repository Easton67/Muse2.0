@model DataObjects.Song

@{
    ViewBag.Title = "Details";
}

@*delete modal*@
<div class="modal text-light" id="delete-modal" tabindex="-1" aria-labelledby="modal-title" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5>Are you sure you want to delete @Model.Title?</h5>
                <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Delete", "Song", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" value="@Model.SongID" />
                    <div class="form-actions">
                        <input id="confirm-delete-button" type="submit" value="Delete" class="btn btn-danger" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="mx-5 my-4 d-flex justify-content-center">
    <div class="d-flex justify-content-between">
        <div> 
            <div>
                <img id="album-img-edit" style="width: 30rem; height: 30rem;" src="@Url.Action("GetSongPhoto", "Helper", new { songID = Model.SongID })" alt="Art for @Model.Title by @Model.Artist." />
            </div>
            <div class="mt-3">
                <button class="btn-add" onclick="window.location.href='@Url.Action("Library", "Song")'">
                    Back to Library
                </button>
            </div>
        </div>
        <div class="fs-3 px-5 mt-4">
            <p>
                @Model.Title
                @if (Model.Explicit == true)
                {
                    <img class="explicit-white" src="~/Images/explicit.png" />
                }
            </p>
            @if (Model.Album.Length.Equals(0))
            {
                <p>Album: Unknown</p>
            }
            else
            {
                <p>
                    Album:
                    <a class="mt-4" href="@Url.Action("Details", "Album", new { albumTitle = Model.Album, artistID = Model.Artist})">
                        @Model.Album
                    </a>
                </p>
            }
            @if (Model.Artist.Length.Equals(0))
            {
                <p>Artist: Unknown</p>
            }
            else
            {
                <p>
                    Artist:
                    <a class="mt-4" href="@Url.Action("Details", "Artist", new { id = Model.Artist})">
                        @Model.Artist
                    </a>
                </p>
            }
            <p>Year Released: @Html.DisplayFor(model => model.YearReleased)</p>
            @if (Model.Genre.Length.Equals(0))
            {
                <p>Genre: None</p>
            }
            else
            {
                <p>Genre: @Html.DisplayFor(model => model.Genre)</p>
            }
            <p class="mt-2 fs-5">Added: @Model.DateAdded.Date.ToShortDateString()</p>
            <br />
            <div class="text-nowrap mt-4">
                <a class="mt-4" href="@Url.Action("CreateWithSongProvided", "Review", new { songID = Model.SongID })">
                    Write a Review
                </a>
                .
                @Html.ActionLink("Edit", "Edit", new { id = Model.SongID }) .
                <button class="delete-button fw-semibold text-danger"
                        style="border: none; color: white; background-color: transparent; font-size: 30px;"
                        data-bs-toggle="modal"
                        data-bs-target="#delete-modal">
                    Delete
                </button>
            </div>
        </div>
        <div class="fs-3 px-5 mt-4">
            @*@if (Model.Plays.Equals(0))
            {
                <p>No plays</p>
            }
            else if (Model.Plays.Equals(1))
            {
                <p>1 play</p>
            }
            else
            {
                <p>
                    @Html.DisplayFor(model => model.Plays) plays
                </p>
            }*@
        </div>
        <div>
            <textarea readonly="readonly" id="lyrics">@Model.Lyrics</textarea>
        </div>
    </div>
</div>
