@model DataObjects.Song

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm(Html.BeginForm("Edit", "Song", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="mx-5 my-4">
        <div class="d-flex justify-content-center">
            <div>
                <div class="form-group">
                    <div class="col-md-10">
                        <img onclick="document.getElementById('file-input').click();"
                             id="album-img-edit"
                             src="@Url.Action("GetSongPhoto", "Helper", new { songID = Model.SongID })"
                             alt="Album art for @Model.Album by @Model.Artist"
                             style="cursor: pointer; width: 30rem; height: 30rem;" />
                        <input type="file"
                               id="file-input"
                               name="imageFile"
                               class="form-control"
                               style="display: none;"
                               accept="image/png"
                               onchange="handleImageSelection(event)" />
                        @Html.ValidationMessageFor(model => model.ImageFilePath, "", new { @class = "text-danger fs-5" })
                    </div>
                </div>
                <p class="mt-2">Added: @Model.DateAdded.Date.ToShortDateString()</p>
                <div class="d-flex justify-content-between">
                    <div class="btn-add" onclick="window.location.href='@Url.Action("Library", "Song")'">
                        Back to Library
                    </div>
                    <div class="btn-add" onclick="window.location.href='@Url.Action("Details", "Song", new { id = Model.SongID })'">
                        View Song
                    </div>
                    <input type="submit" value="Save" class="btn-add" />
                </div>
            </div>
            <div class="fs-5 px-5 song-form-edit mt-1"> 
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2 fs-5" })
                    <br>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Album, htmlAttributes: new { @class = "control-label col-md-2 fs-5" })
                    <br>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Album, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Album, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Artist, htmlAttributes: new { @class = "control-label col-md-2 fs-5" })
                    <br>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Artist, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Artist, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    Year Released
                    <br>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.YearReleased, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.YearReleased, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2 fs-5" })
                    <br>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div style="width: 500px; height: 300px;">
                <div style="width: 500px; height: 300px;">
                    @Html.TextAreaFor(model => model.Lyrics, new { @class = "form-control", rows = "4", id = "lyrics" })
                </div>
            </div>
        </div>
    </div>
}


<script>
    function openFileDialog() {
        document.getElementById('album-img-edit').click();
    }

    function handleImageSelection(event) {
        // 0 since we are grabbing only 1 file
        const imageFilePath = event.target.files[0];
        if (imageFilePath) {
            const reader = new FileReader();
            reader.onload = function (e) {
                const albumImgEdit = document.getElementById('album-img-edit');
                albumImgEdit.src = e.target.result;
            };
            // changes file path to url to use as source
            reader.readAsDataURL(imageFilePath);
        }
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
