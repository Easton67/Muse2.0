﻿@model IEnumerable<DataObjects.Song>

@{
    ViewBag.Title = "Library";
    int charLimit = 20;
    var mp3FilePath = "";
    string songID = "";
}
<div class="d-flex px-5 pt-3">
    <button class="btn-add mx-3" onclick="window.location.href='@Url.Action("Create", "Song")'">
        Add Song
    </button>
    <input id="songSearchBox" style="border-radius: 70px;" class="px-3" type="text" onkeyup="myFunction()" placeholder="Search for song...">
    <img onclick="searchForSong()" class="icon px-3" src="~/Images/search.svg" />
    <img onclick="listView()" class="icon px-3" src="~/Images/list-icon.svg" />
    <img onclick="gridView()" class="icon px-3" src="~/Images/grid-icon.svg" />
</div>

@*delete modal*@
<div class="modal text-light" id="delete-modal" tabindex="-1" aria-labelledby="modal-title" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content bg-dark">
            <div class="modal-header">
                <h5 class="modal-title delete-message" id="modal-title"></h5>
                <button type="button" class="btn-close bg-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Delete", "Song", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="delete-song-id" name="id" value="" />

                    <div class="form-actions">
                        <input id="confirm-delete-button" type="submit" value="Delete" class="btn btn-danger" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@*list view*@
<div id="library-list-view" class="pt-4" style="display: none;">
    <table class="table">
        <tr>
            <th>
                <p class="text-nowrap">Album Art</p>
            </th>
            <th> 
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Artist)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Album)
            </th>
            <th>
                <p class="text-nowrap">Year Released</p>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genre)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Plays)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.isLiked)
            </th>
            <th>
                <p class="text-nowrap">Date Added</p>
            </th>
            <th>
                <p class="text-nowrap">Delete</p>
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <img id="album-img" class="album-img list-album-img" src="/MuseConfig/AlbumArt/@Path.GetFileName(item.ImageFilePath)" alt="Album art" data-songid="@item.SongID">
                    <button id="library-play-button" class="library-play-button list-view-library-play-button">
                        <img id="library-play-img" src="~/Images/play.png" />
                    </button><br />
                    <audio controls src="/MuseConfig/SongFiles/@Path.GetFileName(item.Mp3FilePath)" data-audio-songid="@item.SongID"></audio>
                </td>
                @{
                    string title = item.Title.Length >= charLimit ? item.Title.Substring(0, charLimit) + "..." : item.Title;
                    string album = item.Album.Length >= charLimit ? item.Album.Substring(0, charLimit) + "..." : item.Album;
                    string artist = item.Artist.Length >= charLimit ? item.Artist.Substring(0, charLimit) + "..." : item.Artist;
                }
                <td>
                    <p class="text-nowrap">
                        @Html.ActionLink(title, "Details", new { id = item.SongID })
                        @if (item.Explicit == true)
                        {
                            <img class="explicit-white" src="~/Images/explicit.png" />
                        }
                    </p>
                </td>
                <td>
                    @artist
                </td>
                <td>
                    @if (album.Length.Equals(0))
                    {
                        <p>Unknown</p>
                    }
                    else
                    {
                        @album
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.YearReleased)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Plays)
                </td>
                <td>
                    <img onclick="favorite(this)" class="favorite unfilled" src="~/Images/heart-icon.svg" />
                    @*@if (item.isLiked.Equals(1))
                        {
                            <img onclick="favorite()" class="favorite unfilled" src="~/Images/heart-icon.svg" />
                        }
                        else
                        {
                            <img onlcick="favorite()" class="favorite" src="~/Images/heart-icon-filled.svg" />
                        }*@
                </td>
                <td>
                    @item.DateAdded.ToShortDateString()
                </td>
                <td>
                    <button class="delete-button text-danger"
                            style="border: none; color: white; background-color: transparent; font-size: 20px;" 
                            data-bs-toggle="modal" 
                            data-bs-target="#delete-modal" 
                            data-song-id="@item.SongID" 
                            data-song-name="@item.Title">Delete</button>
                </td>
            </tr>
        }
    </table>
</div>

@*grid view*@
<audio controls src="/MuseConfig/SongFiles/@Path.GetFileName(mp3FilePath) data-audio-songid="@songID"></audio>
<div id="library-grid-view" class="row mx-5 row-cols- lg-10">
    @foreach (var item in Model)
    {
        <div id="library-cards-container" class="col my-4 inline w-auto">
            <div id="image-container" class="image-container" data-image-songID="@item.SongID">
                <img id="album-img" class="album-img" src="/MuseConfig/AlbumArt/@Path.GetFileName(item.ImageFilePath)" alt="Album art for @Html.DisplayNameFor(model => model.Title) by @Html.DisplayNameFor(model => model.Artist)" data-songid="@item.SongID">
                <button id="library-play-button" class="library-play-button">
                    <img src="~/Images/play.png" />
                </button><br />
                <audio controls src="/MuseConfig/SongFiles/@Path.GetFileName(item.Mp3FilePath)" data-audio-songid="@item.SongID"></audio>
                <br />
            </div>
            <div class="mx-5 song-info-div">
                <br>
                <div class="d-inline-block text-nowrap" sstyle="font-size: 30px;">
                    @{
                        string title = item.Title.Length >= charLimit ? item.Title.Substring(0, charLimit) + "..." : item.Title;
                        string album = item.Album.Length >= charLimit ? item.Album.Substring(0, charLimit) + "..." : item.Album;
                        string artist = item.Artist.Length >= charLimit ? item.Artist.Substring(0, charLimit) + "..." : item.Artist;
                    }
                    <p class="text-nowrap">
                        @title
                        @if (item.Explicit == true)
                        {
                            <img class="explicit-white" src="~/Images/explicit.png" />
                        }
                    </p>
                    <p>@album</p>
                    <p>@artist</p>
                </div>
            </div>
        </div>
    }
</div>
<script>
    function searchForSong() {
        var title = document.getElementById("songSearchBox").value.trim().toLowerCase();
        var libraryURL = '@Url.Action("Library", "Song")' + '?searchText=' + encodeURIComponent(title);
        window.location.href = libraryURL;
    };

    function favorite(element) {
        if (element.classList.contains('unfilled')) {
                element.src = "/Images/heart-icon-filled.svg";
            element.classList.remove('unfilled');
        } else {
                element.src = "/Images/heart-icon.svg";
            element.classList.add('unfilled');
        }
    }

    var deleteButtons = document.querySelectorAll('.delete-button');

    // add a click event to all delete buttons
    deleteButtons.forEach(function (button) {
        button.addEventListener('click', function () {
            var deleteMessage = document.querySelector('.delete-message');
            var songName = button.getAttribute('data-song-name');
            var songID = document.getElementById('delete-song-id');
            songID.value = button.getAttribute('data-song-id');
            deleteMessage.textContent = "Are you sure you want to delete " + songName + "?";
        });
    });

    
</script>